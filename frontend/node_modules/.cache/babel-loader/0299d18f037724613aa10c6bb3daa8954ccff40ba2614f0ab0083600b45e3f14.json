{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCA\\\\TimePass-Games-LogBook\\\\frontend\\\\src\\\\components\\\\GameForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from '../api/axios';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameForm = ({\n  fetchGames,\n  selectedGame,\n  setSelectedGame\n}) => {\n  _s();\n  // State to hold form data, initialized with empty values\n  const [form, setForm] = useState({\n    name: '',\n    url: '',\n    author: '',\n    publishedDate: ''\n  });\n\n  // Effect hook to pre-fill the form if a game is selected for editing\n  useEffect(() => {\n    if (selectedGame) setForm(selectedGame); // Pre-fill form fields with the selected game data\n  }, [selectedGame]);\n\n  // Handle input changes and update form state\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission for both creating and updating games\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // If a game is selected, we update it, otherwise we create a new game\n    if (selectedGame) {\n      await axios.put(`/games/${selectedGame._id}`, form); // Update existing game\n    } else {\n      await axios.post('/games', form); // Create new game\n    }\n\n    // Reset the form after submission\n    setForm({\n      name: '',\n      url: '',\n      author: '',\n      publishedDate: ''\n    });\n    setSelectedGame(null); // Deselect the selected game\n    fetchGames(); // Refresh the games list\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: selectedGame ? 'Update Game' : 'Add New Game'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Game Name\",\n      name: \"name\",\n      value: form.name,\n      onChange: handleChange,\n      fullWidth: true,\n      required: true,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Game URL\",\n      name: \"url\",\n      value: form.url,\n      onChange: handleChange,\n      fullWidth: true,\n      required: true,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Author\",\n      name: \"author\",\n      value: form.author,\n      onChange: handleChange,\n      fullWidth: true,\n      required: true,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Published Date\",\n      type: \"date\",\n      name: \"publishedDate\",\n      value: form.publishedDate,\n      onChange: handleChange,\n      fullWidth: true,\n      required: true,\n      variant: \"outlined\",\n      InputLabelProps: {\n        shrink: true // Ensure the label is always visible when a date is selected\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      children: [selectedGame ? 'Update' : 'Add', \" Game\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GameForm, \"vs/UovSEFA8EBDB3pCXhnO2evaM=\");\n_c = GameForm;\nexport default GameForm;\nvar _c;\n$RefreshReg$(_c, \"GameForm\");","map":{"version":3,"names":["useState","useEffect","axios","TextField","Button","Box","Typography","jsxDEV","_jsxDEV","GameForm","fetchGames","selectedGame","setSelectedGame","_s","form","setForm","name","url","author","publishedDate","handleChange","e","target","value","handleSubmit","preventDefault","put","_id","post","component","onSubmit","sx","display","flexDirection","gap","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","fullWidth","required","type","InputLabelProps","shrink","color","_c","$RefreshReg$"],"sources":["D:/MCA/TimePass-Games-LogBook/frontend/src/components/GameForm.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from '../api/axios';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\n\r\nconst GameForm = ({ fetchGames, selectedGame, setSelectedGame }) => {\r\n  // State to hold form data, initialized with empty values\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    url: '',\r\n    author: '',\r\n    publishedDate: '',\r\n  });\r\n\r\n  // Effect hook to pre-fill the form if a game is selected for editing\r\n  useEffect(() => {\r\n    if (selectedGame) setForm(selectedGame); // Pre-fill form fields with the selected game data\r\n  }, [selectedGame]);\r\n\r\n  // Handle input changes and update form state\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission for both creating and updating games\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // If a game is selected, we update it, otherwise we create a new game\r\n    if (selectedGame) {\r\n      await axios.put(`/games/${selectedGame._id}`, form); // Update existing game\r\n    } else {\r\n      await axios.post('/games', form); // Create new game\r\n    }\r\n\r\n    // Reset the form after submission\r\n    setForm({ name: '', url: '', author: '', publishedDate: '' });\r\n    setSelectedGame(null); // Deselect the selected game\r\n    fetchGames(); // Refresh the games list\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {selectedGame ? 'Update Game' : 'Add New Game'}\r\n      </Typography>\r\n\r\n      <TextField\r\n        label=\"Game Name\"\r\n        name=\"name\"\r\n        value={form.name}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        required\r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <TextField\r\n        label=\"Game URL\"\r\n        name=\"url\"\r\n        value={form.url}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        required\r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <TextField\r\n        label=\"Author\"\r\n        name=\"author\"\r\n        value={form.author}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        required\r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <TextField\r\n        label=\"Published Date\"\r\n        type=\"date\"\r\n        name=\"publishedDate\"\r\n        value={form.publishedDate}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        required\r\n        variant=\"outlined\"\r\n        InputLabelProps={{\r\n          shrink: true, // Ensure the label is always visible when a date is selected\r\n        }}\r\n      />\r\n\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        {selectedGame ? 'Update' : 'Add'} Game\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GameForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}