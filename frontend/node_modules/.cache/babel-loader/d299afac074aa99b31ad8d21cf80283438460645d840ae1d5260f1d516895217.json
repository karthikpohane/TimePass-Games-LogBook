{"ast":null,"code":"// src/components/GameForm.jsx\nimport{useState,useEffect}from'react';import axios from'../api/axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GameForm=_ref=>{let{fetchGames,selectedGame,setSelectedGame}=_ref;// State to hold form data, initialized with empty values\nconst[form,setForm]=useState({name:'',url:'',author:'',publishedDate:''});// Effect hook to pre-fill the form if a game is selected for editing\nuseEffect(()=>{if(selectedGame)setForm(selectedGame);// Pre-fill form fields with the selected game data\n},[selectedGame]);// Handle input changes and update form state\nconst handleChange=e=>{setForm({...form,[e.target.name]:e.target.value});};// Handle form submission for both creating and updating games\nconst handleSubmit=async e=>{e.preventDefault();// If a game is selected, we update it, otherwise we create a new game\nif(selectedGame){await axios.put(`/games/${selectedGame._id}`,form);// Update existing game\n}else{await axios.post('/games',form);// Create new game\n}// Reset the form after submission\nsetForm({name:'',url:'',author:'',publishedDate:''});setSelectedGame(null);// Deselect the selected game\nfetchGames();// Refresh the games list\n};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{name:\"name\",value:form.name,onChange:handleChange,placeholder:\"Game Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"url\",value:form.url,onChange:handleChange,placeholder:\"Game URL\",required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"author\",value:form.author,onChange:handleChange,placeholder:\"Author\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"publishedDate\",value:form.publishedDate,onChange:handleChange,required:true}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",children:[selectedGame?'Update':'Add',\" Game\"]})]});};export default GameForm;","map":{"version":3,"names":["useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","GameForm","_ref","fetchGames","selectedGame","setSelectedGame","form","setForm","name","url","author","publishedDate","handleChange","e","target","value","handleSubmit","preventDefault","put","_id","post","onSubmit","children","onChange","placeholder","required","type"],"sources":["D:/MCA/TimePass-Games-LogBook/frontend/src/components/GameForm.jsx"],"sourcesContent":["// src/components/GameForm.jsx\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from '../api/axios';\r\n\r\nconst GameForm = ({ fetchGames, selectedGame, setSelectedGame }) => {\r\n  // State to hold form data, initialized with empty values\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    url: '',\r\n    author: '',\r\n    publishedDate: '',\r\n  });\r\n\r\n  // Effect hook to pre-fill the form if a game is selected for editing\r\n  useEffect(() => {\r\n    if (selectedGame) setForm(selectedGame); // Pre-fill form fields with the selected game data\r\n  }, [selectedGame]);\r\n\r\n  // Handle input changes and update form state\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission for both creating and updating games\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // If a game is selected, we update it, otherwise we create a new game\r\n    if (selectedGame) {\r\n      await axios.put(`/games/${selectedGame._id}`, form); // Update existing game\r\n    } else {\r\n      await axios.post('/games', form); // Create new game\r\n    }\r\n\r\n    // Reset the form after submission\r\n    setForm({ name: '', url: '', author: '', publishedDate: '' });\r\n    setSelectedGame(null); // Deselect the selected game\r\n    fetchGames(); // Refresh the games list\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Input fields for game details */}\r\n      <input\r\n        name=\"name\"\r\n        value={form.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Game Name\"\r\n        required\r\n      />\r\n      <input\r\n        name=\"url\"\r\n        value={form.url}\r\n        onChange={handleChange}\r\n        placeholder=\"Game URL\"\r\n        required\r\n      />\r\n      <input\r\n        name=\"author\"\r\n        value={form.author}\r\n        onChange={handleChange}\r\n        placeholder=\"Author\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishedDate\"\r\n        value={form.publishedDate}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      {/* Submit button with dynamic text based on whether a game is being edited or added */}\r\n      <button type=\"submit\">{selectedGame ? 'Update' : 'Add'} Game</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GameForm;\r\n"],"mappings":"AAAA;AAEA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAmD,IAAlD,CAAEC,UAAU,CAAEC,YAAY,CAAEC,eAAgB,CAAC,CAAAH,IAAA,CAC7D;AACA,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,CAC/Bc,IAAI,CAAE,EAAE,CACRC,GAAG,CAAE,EAAE,CACPC,MAAM,CAAE,EAAE,CACVC,aAAa,CAAE,EACjB,CAAC,CAAC,CAEF;AACAhB,SAAS,CAAC,IAAM,CACd,GAAIS,YAAY,CAAEG,OAAO,CAACH,YAAY,CAAC,CAAE;AAC3C,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CAElB;AACA,KAAM,CAAAQ,YAAY,CAAIC,CAAC,EAAK,CAC1BN,OAAO,CAAC,CAAE,GAAGD,IAAI,CAAE,CAACO,CAAC,CAACC,MAAM,CAACN,IAAI,EAAGK,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC,CAAC,CACvD,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,CAAC,EAAK,CAChCA,CAAC,CAACI,cAAc,CAAC,CAAC,CAElB;AACA,GAAIb,YAAY,CAAE,CAChB,KAAM,CAAAR,KAAK,CAACsB,GAAG,CAAC,UAAUd,YAAY,CAACe,GAAG,EAAE,CAAEb,IAAI,CAAC,CAAE;AACvD,CAAC,IAAM,CACL,KAAM,CAAAV,KAAK,CAACwB,IAAI,CAAC,QAAQ,CAAEd,IAAI,CAAC,CAAE;AACpC,CAEA;AACAC,OAAO,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,GAAG,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAG,CAAC,CAAC,CAC7DN,eAAe,CAAC,IAAI,CAAC,CAAE;AACvBF,UAAU,CAAC,CAAC,CAAE;AAChB,CAAC,CAED,mBACEH,KAAA,SAAMqB,QAAQ,CAAEL,YAAa,CAAAM,QAAA,eAE3BxB,IAAA,UACEU,IAAI,CAAC,MAAM,CACXO,KAAK,CAAET,IAAI,CAACE,IAAK,CACjBe,QAAQ,CAAEX,YAAa,CACvBY,WAAW,CAAC,WAAW,CACvBC,QAAQ,MACT,CAAC,cACF3B,IAAA,UACEU,IAAI,CAAC,KAAK,CACVO,KAAK,CAAET,IAAI,CAACG,GAAI,CAChBc,QAAQ,CAAEX,YAAa,CACvBY,WAAW,CAAC,UAAU,CACtBC,QAAQ,MACT,CAAC,cACF3B,IAAA,UACEU,IAAI,CAAC,QAAQ,CACbO,KAAK,CAAET,IAAI,CAACI,MAAO,CACnBa,QAAQ,CAAEX,YAAa,CACvBY,WAAW,CAAC,QAAQ,CACpBC,QAAQ,MACT,CAAC,cACF3B,IAAA,UACE4B,IAAI,CAAC,MAAM,CACXlB,IAAI,CAAC,eAAe,CACpBO,KAAK,CAAET,IAAI,CAACK,aAAc,CAC1BY,QAAQ,CAAEX,YAAa,CACvBa,QAAQ,MACT,CAAC,cAEFzB,KAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAJ,QAAA,EAAElB,YAAY,CAAG,QAAQ,CAAG,KAAK,CAAC,OAAK,EAAQ,CAAC,EACjE,CAAC,CAEX,CAAC,CAED,cAAe,CAAAH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}