{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCA\\\\TimePass-Games\\\\frontend\\\\src\\\\components\\\\GameForm.jsx\",\n  _s = $RefreshSig$();\n// src/components/GameForm.jsx\n\nimport { useState, useEffect } from 'react';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameForm = ({\n  fetchGames,\n  selectedGame,\n  setSelectedGame\n}) => {\n  _s();\n  // State to hold form data, initialized with empty values\n  const [form, setForm] = useState({\n    name: '',\n    url: '',\n    author: '',\n    publishedDate: ''\n  });\n\n  // Effect hook to pre-fill the form if a game is selected for editing\n  useEffect(() => {\n    if (selectedGame) setForm(selectedGame); // Pre-fill form fields with the selected game data\n  }, [selectedGame]);\n\n  // Handle input changes and update form state\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission for both creating and updating games\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // If a game is selected, we update it, otherwise we create a new game\n    if (selectedGame) {\n      await axios.put(`/games/${selectedGame._id}`, form); // Update existing game\n    } else {\n      await axios.post('/games', form); // Create new game\n    }\n\n    // Reset the form after submission\n    setForm({\n      name: '',\n      url: '',\n      author: '',\n      publishedDate: ''\n    });\n    setSelectedGame(null); // Deselect the selected game\n    fetchGames(); // Refresh the games list\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      value: form.name,\n      onChange: handleChange,\n      placeholder: \"Game Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"url\",\n      value: form.url,\n      onChange: handleChange,\n      placeholder: \"Game URL\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"author\",\n      value: form.author,\n      onChange: handleChange,\n      placeholder: \"Author\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"publishedDate\",\n      value: form.publishedDate,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [selectedGame ? 'Update' : 'Add', \" Game\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(GameForm, \"vs/UovSEFA8EBDB3pCXhnO2evaM=\");\n_c = GameForm;\nexport default GameForm;\nvar _c;\n$RefreshReg$(_c, \"GameForm\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","GameForm","fetchGames","selectedGame","setSelectedGame","_s","form","setForm","name","url","author","publishedDate","handleChange","e","target","value","handleSubmit","preventDefault","put","_id","post","onSubmit","children","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["D:/MCA/TimePass-Games/frontend/src/components/GameForm.jsx"],"sourcesContent":["// src/components/GameForm.jsx\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from '../api/axios';\r\n\r\nconst GameForm = ({ fetchGames, selectedGame, setSelectedGame }) => {\r\n  // State to hold form data, initialized with empty values\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    url: '',\r\n    author: '',\r\n    publishedDate: '',\r\n  });\r\n\r\n  // Effect hook to pre-fill the form if a game is selected for editing\r\n  useEffect(() => {\r\n    if (selectedGame) setForm(selectedGame); // Pre-fill form fields with the selected game data\r\n  }, [selectedGame]);\r\n\r\n  // Handle input changes and update form state\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission for both creating and updating games\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // If a game is selected, we update it, otherwise we create a new game\r\n    if (selectedGame) {\r\n      await axios.put(`/games/${selectedGame._id}`, form); // Update existing game\r\n    } else {\r\n      await axios.post('/games', form); // Create new game\r\n    }\r\n\r\n    // Reset the form after submission\r\n    setForm({ name: '', url: '', author: '', publishedDate: '' });\r\n    setSelectedGame(null); // Deselect the selected game\r\n    fetchGames(); // Refresh the games list\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Input fields for game details */}\r\n      <input\r\n        name=\"name\"\r\n        value={form.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Game Name\"\r\n        required\r\n      />\r\n      <input\r\n        name=\"url\"\r\n        value={form.url}\r\n        onChange={handleChange}\r\n        placeholder=\"Game URL\"\r\n        required\r\n      />\r\n      <input\r\n        name=\"author\"\r\n        value={form.author}\r\n        onChange={handleChange}\r\n        placeholder=\"Author\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishedDate\"\r\n        value={form.publishedDate}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      {/* Submit button with dynamic text based on whether a game is being edited or added */}\r\n      <button type=\"submit\">{selectedGame ? 'Update' : 'Add'} Game</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GameForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}